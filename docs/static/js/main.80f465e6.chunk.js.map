{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAgCeA,EA7BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAAP,GACtBF,EAAeE,EAAEQ,OAAOF,a,sCCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCYLO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKc,UAAU,2BAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCuBGO,EA1BC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDR,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GACCH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDd0BK,CAAc1B,GAAlCa,EAHmB,EAGxBN,KAAaa,EAHW,EAGXA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,mBAAGJ,UAAU,iBAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aEUvBgB,EAzBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,oBAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80f465e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategories } ) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = e => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(c => [inputValue, ...c]);\n            setInputValue('');\n        }\n\n    }\n    \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nexport default AddCategory\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\n","export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=QEUxcjT7lcPFJlTNlQkeDIR1wsfmjINy`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    \n    \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\n\nconst GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__fadeInDown\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ( { category } ) => {\n\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3> { category } </h3>\n\n            { loading && <p className=\"animate__flash\" >Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( (img) => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        /> \n                    ))\n                }\n            </div>\n        \n        </>\n    )\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react/cjs/react.development\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n    \n        getGifs( category )\n            .then( imgs => {\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n            })\n\n    }, [category])\n\n    return state; // { data:[], loading: true }\n\n}","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Attack on Titan']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid \n                            key={ category } \n                            category={ category } \n                        />\n                    )\n                }\n            </ol>\n\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.js';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}